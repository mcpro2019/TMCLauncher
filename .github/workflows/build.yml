
name: Build

on:
  push:
  workflow_dispatch:
    inputs:
      tags:
        description: '名稱'
        required: false

jobs:
  release:
    runs-on: ${{ matrix.os }}
    if: ${{ contains(github.event.head_commit.message, 'release') }}

    permissions:
      contents: write

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: npm ci
        shell: bash
      
      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run dist
        shell: bash

      - name: Upload a Release Asset (linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: TMC_Launcher_Linux
          path: |
            dist/*.AppImage
            dist/*.yml
            dist/*.blockmap

      - name: Upload a Release Asset (mac)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: TMC_Launcher_Mac
          path: |
            dist/*.dmg
            dist/*.blockmap
            dist/*.AppImage
            dist/*.yml
            dist/.icon-ico
            dist/.icon-icns

      - name: Upload a Release Asset (win)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: TMC_Launcher_Win
          path: dist
      
      - name: Upload Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.head_commit.message }}
          draft: true
          files: |
            dist/*.dmg
            dist/*.blockmap
            dist/*.AppImage
            dist/latest.yml
            dist/latest-win.yml
            dist/latest-linux.yml
            dist/*.AppImage
            dist/*.exe

  release-dev:
    runs-on: ${{ matrix.os }}
    if: ${{ contains(github.event.head_commit.message, 'dev') }}

    permissions:
      contents: write

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: npm ci
        shell: bash
      
      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run dist
        shell: bash

      - name: Upload a Release Asset (linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: TMC_Launcher_Linux
          path: |
            dist/*.AppImage
            dist/*.yml
            dist/*.blockmap

      - name: Upload a Release Asset (mac)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: TMC_Launcher_Mac
          path: |
            dist/*.dmg
            dist/*.blockmap
            dist/*.AppImage
            dist/*.yml
            dist/.icon-ico
            dist/.icon-icns

      - name: Upload a Release Asset (win)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: TMC_Launcher_Win
          path: dist
      
      - name: Upload Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.head_commit.message }}
          draft: true
          files: |
            dist/*.dmg
            dist/*.blockmap
            dist/*.AppImage
            dist/latest.yml
            dist/latest-win.yml
            dist/latest-linux.yml
            dist/*.AppImage
            dist/*.exe